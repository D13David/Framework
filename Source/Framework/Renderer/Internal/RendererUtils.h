#ifndef __RendererUtils_h_
#define __RendererUtils_h_

static DXGI_FORMAT mapPixelFormatForRendertarget(ePixelFormat format)
{
  switch (format)
  {
  case PF_B8G8R8A8: return DXGI_FORMAT_B8G8R8A8_TYPELESS;
  case PF_R16G16: return DXGI_FORMAT_R16G16_UNORM;
  case PF_A2B10G10R10: return DXGI_FORMAT_R10G10B10A2_UNORM;
  case PF_A16B16G16R16: return DXGI_FORMAT_R16G16B16A16_UNORM;
  case PF_DEPTHSTENCIL: return DXGI_FORMAT_R24G8_TYPELESS;
  case PF_SHADOW_DEPTH: return DXGI_FORMAT_D16_UNORM;
  case PF_R32G32B32A32_FLOAT: return DXGI_FORMAT_R32G32B32A32_FLOAT;
  case PF_R32G32B32_FLOAT: return DXGI_FORMAT_R32G32B32_FLOAT;
  case PF_R16G16B16A16_FLOAT: return DXGI_FORMAT_R16G16B16A16_FLOAT;
  case PF_R11G11A10_FLOAT: return DXGI_FORMAT_R11G11B10_FLOAT;
  case PF_R16G16_FLOAT: return DXGI_FORMAT_R16G16_FLOAT;
  case PF_R32G32_FLOAT: return DXGI_FORMAT_R32G32_FLOAT;
  case PF_R16_FLOAT: return DXGI_FORMAT_R16_FLOAT;
  case PF_R32_FLOAT: return DXGI_FORMAT_R32_FLOAT;
  case PF_BC1: return DXGI_FORMAT_BC1_TYPELESS;
  case PF_BC2: return DXGI_FORMAT_BC2_TYPELESS;
  case PF_BC3: return DXGI_FORMAT_BC3_TYPELESS;
  case PF_BC4: return DXGI_FORMAT_BC4_UNORM;
  }

  return DXGI_FORMAT_UNKNOWN;
}

static DXGI_FORMAT mapPixelFormatForTexture(ePixelFormat format, bool srgb = false)
{
  switch (format)
  {
  case PF_B8G8R8A8: return srgb ? DXGI_FORMAT_B8G8R8A8_UNORM_SRGB : DXGI_FORMAT_B8G8R8A8_UNORM;
  case PF_R16G16: return DXGI_FORMAT_R16G16_UNORM;
  case PF_A2B10G10R10: return DXGI_FORMAT_R10G10B10A2_UNORM;
  case PF_A16B16G16R16: return DXGI_FORMAT_R16G16B16A16_UNORM;
  case PF_R32G32B32A32_FLOAT: return DXGI_FORMAT_R32G32B32A32_FLOAT;
  case PF_R32G32B32_FLOAT: return DXGI_FORMAT_R32G32B32_FLOAT;
  case PF_R16G16B16A16_FLOAT: return DXGI_FORMAT_R16G16B16A16_FLOAT;
  case PF_R11G11A10_FLOAT: return DXGI_FORMAT_R11G11B10_FLOAT;
  case PF_R16G16_FLOAT: return DXGI_FORMAT_R16G16_FLOAT;
  case PF_R32G32_FLOAT: return DXGI_FORMAT_R32G32_FLOAT;
  case PF_R16_FLOAT: return DXGI_FORMAT_R16_FLOAT;
  case PF_R32_FLOAT: return DXGI_FORMAT_R32_FLOAT;
  case PF_BC1: return srgb ? DXGI_FORMAT_BC1_UNORM_SRGB : DXGI_FORMAT_BC1_UNORM;
  case PF_BC2: return srgb ? DXGI_FORMAT_BC2_UNORM_SRGB : DXGI_FORMAT_BC2_UNORM;
  case PF_BC3: return srgb ? DXGI_FORMAT_BC3_UNORM_SRGB : DXGI_FORMAT_BC3_UNORM;
  case PF_BC4: return DXGI_FORMAT_BC4_UNORM;
  }

  return DXGI_FORMAT_UNKNOWN;
}

static DXGI_FORMAT findAppropriateDepthStencilFormat(DXGI_FORMAT format)
{
  switch (format)
  {
  case DXGI_FORMAT_R24G8_TYPELESS:
    return DXGI_FORMAT_D24_UNORM_S8_UINT;
  case DXGI_FORMAT_R32_TYPELESS:
    return DXGI_FORMAT_D32_FLOAT;
  case DXGI_FORMAT_R16_TYPELESS:
    return DXGI_FORMAT_D16_UNORM;
  }

  return format;
}

static DXGI_FORMAT findAppropriateRenderTargetFormat(DXGI_FORMAT format, bool srgb = false)
{
  if (srgb)
  {
    switch (format)
    {
    case DXGI_FORMAT_B8G8R8A8_TYPELESS:
      return DXGI_FORMAT_B8G8R8A8_UNORM_SRGB;
    case DXGI_FORMAT_BC1_TYPELESS:
      return DXGI_FORMAT_BC1_UNORM_SRGB;
    case DXGI_FORMAT_BC2_TYPELESS:
      return DXGI_FORMAT_BC2_UNORM_SRGB;
    case DXGI_FORMAT_BC3_TYPELESS:
      return DXGI_FORMAT_BC3_UNORM_SRGB;
    }
  }
  else
  {
    switch (format)
    {
    case DXGI_FORMAT_B8G8R8A8_TYPELESS:
      return DXGI_FORMAT_B8G8R8A8_UNORM;
    case DXGI_FORMAT_BC1_TYPELESS:
      return DXGI_FORMAT_BC1_UNORM;
    case DXGI_FORMAT_BC2_TYPELESS:
      return DXGI_FORMAT_BC2_UNORM;
    case DXGI_FORMAT_BC3_TYPELESS:
      return DXGI_FORMAT_BC3_UNORM;
    }
  }

  switch (format)
  {
  case DXGI_FORMAT_R24G8_TYPELESS:
    return DXGI_FORMAT_R24_UNORM_X8_TYPELESS;
  case DXGI_FORMAT_R32_TYPELESS:
    return DXGI_FORMAT_R32_FLOAT;
  case DXGI_FORMAT_R16_TYPELESS:
    return DXGI_FORMAT_R16_UNORM;
  }

  return format;
}

static uint32 calcPitchForFormat(DXGI_FORMAT format)
{
  switch (format)
  {
  case DXGI_FORMAT_R32G32B32A32_TYPELESS:
  case DXGI_FORMAT_R32G32B32A32_FLOAT:
  case DXGI_FORMAT_R32G32B32A32_UINT:
  case DXGI_FORMAT_R32G32B32A32_SINT:
    return 16;

  case DXGI_FORMAT_R32G32B32_TYPELESS:
  case DXGI_FORMAT_R32G32B32_FLOAT:
  case DXGI_FORMAT_R32G32B32_UINT:
  case DXGI_FORMAT_R32G32B32_SINT:
    return 12;

  case DXGI_FORMAT_R16G16B16A16_TYPELESS:
  case DXGI_FORMAT_R16G16B16A16_FLOAT:
  case DXGI_FORMAT_R16G16B16A16_UNORM:
  case DXGI_FORMAT_R16G16B16A16_UINT:
  case DXGI_FORMAT_R16G16B16A16_SNORM:
  case DXGI_FORMAT_R16G16B16A16_SINT:
  case DXGI_FORMAT_R32G32_TYPELESS:
  case DXGI_FORMAT_R32G32_FLOAT:
  case DXGI_FORMAT_R32G32_UINT:
  case DXGI_FORMAT_R32G32_SINT:
  case DXGI_FORMAT_R32G8X24_TYPELESS:
  case DXGI_FORMAT_D32_FLOAT_S8X24_UINT:
  case DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS:
  case DXGI_FORMAT_X32_TYPELESS_G8X24_UINT:
    return 8;

  case DXGI_FORMAT_R10G10B10A2_TYPELESS:
  case DXGI_FORMAT_R10G10B10A2_UNORM:
  case DXGI_FORMAT_R10G10B10A2_UINT:
  case DXGI_FORMAT_R11G11B10_FLOAT:
  case DXGI_FORMAT_R8G8B8A8_TYPELESS:
  case DXGI_FORMAT_R8G8B8A8_UNORM:
  case DXGI_FORMAT_R8G8B8A8_UNORM_SRGB:
  case DXGI_FORMAT_R8G8B8A8_UINT:
  case DXGI_FORMAT_R8G8B8A8_SNORM:
  case DXGI_FORMAT_R8G8B8A8_SINT:
  case DXGI_FORMAT_R16G16_TYPELESS:
  case DXGI_FORMAT_R16G16_FLOAT:
  case DXGI_FORMAT_R16G16_UNORM:
  case DXGI_FORMAT_R16G16_UINT:
  case DXGI_FORMAT_R16G16_SNORM:
  case DXGI_FORMAT_R16G16_SINT:
  case DXGI_FORMAT_R32_TYPELESS:
  case DXGI_FORMAT_D32_FLOAT:
  case DXGI_FORMAT_R32_FLOAT:
  case DXGI_FORMAT_R32_UINT:
  case DXGI_FORMAT_R32_SINT:
  case DXGI_FORMAT_R24G8_TYPELESS:
  case DXGI_FORMAT_D24_UNORM_S8_UINT:
  case DXGI_FORMAT_R24_UNORM_X8_TYPELESS:
  case DXGI_FORMAT_X24_TYPELESS_G8_UINT:
  case DXGI_FORMAT_B8G8R8A8_UNORM:
  case DXGI_FORMAT_B8G8R8X8_UNORM:
    return 4;

  case DXGI_FORMAT_R8G8_TYPELESS:
  case DXGI_FORMAT_R8G8_UNORM:
  case DXGI_FORMAT_R8G8_UINT:
  case DXGI_FORMAT_R8G8_SNORM:
  case DXGI_FORMAT_R8G8_SINT:
  case DXGI_FORMAT_R16_TYPELESS:
  case DXGI_FORMAT_R16_FLOAT:
  case DXGI_FORMAT_D16_UNORM:
  case DXGI_FORMAT_R16_UNORM:
  case DXGI_FORMAT_R16_UINT:
  case DXGI_FORMAT_R16_SNORM:
  case DXGI_FORMAT_R16_SINT:
  case DXGI_FORMAT_B5G6R5_UNORM:
  case DXGI_FORMAT_B5G5R5A1_UNORM:
    return 2;

  case DXGI_FORMAT_R8_TYPELESS:
  case DXGI_FORMAT_R8_UNORM:
  case DXGI_FORMAT_R8_UINT:
  case DXGI_FORMAT_R8_SNORM:
  case DXGI_FORMAT_R8_SINT:
  case DXGI_FORMAT_A8_UNORM:
    return 1;

  case DXGI_FORMAT_BC2_TYPELESS:
  case DXGI_FORMAT_BC2_UNORM:
  case DXGI_FORMAT_BC2_UNORM_SRGB:
  case DXGI_FORMAT_BC3_TYPELESS:
  case DXGI_FORMAT_BC3_UNORM:
  case DXGI_FORMAT_BC3_UNORM_SRGB:
  case DXGI_FORMAT_BC5_TYPELESS:
  case DXGI_FORMAT_BC5_UNORM:
  case DXGI_FORMAT_BC5_SNORM:
    return 16;

  case DXGI_FORMAT_R1_UNORM:
  case DXGI_FORMAT_BC1_TYPELESS:
  case DXGI_FORMAT_BC1_UNORM:
  case DXGI_FORMAT_BC1_UNORM_SRGB:
  case DXGI_FORMAT_BC4_TYPELESS:
  case DXGI_FORMAT_BC4_UNORM:
  case DXGI_FORMAT_BC4_SNORM:
    return 8;

  case DXGI_FORMAT_R9G9B9E5_SHAREDEXP:
    return 4;

  case DXGI_FORMAT_R8G8_B8G8_UNORM:
  case DXGI_FORMAT_G8R8_G8B8_UNORM:
    return 4;

  case DXGI_FORMAT_UNKNOWN:
  default:
    ASSERT(false, "unknown format");
    return 0;
  }

  return 0;
}

#endif // __RendererUtils_h_